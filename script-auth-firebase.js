// ============================================
// SCRIPT PRINCIPAL - LOGIN E CADASTRO COM FIREBASE
// ============================================

// Aguardar carregamento do DOM
document.addEventListener('DOMContentLoaded', function() {
    console.log('üîÑ Iniciando script de autentica√ß√£o...');
    
    // Verificar se Firebase est√° carregado
    if (typeof firebase === 'undefined') {
        console.error('‚ùå Firebase n√£o est√° carregado!');
        alert('Erro ao carregar sistema. Recarregue a p√°gina.');
        return;
    }
    
    if (typeof firebaseService === 'undefined') {
        console.error('‚ùå Firebase Service n√£o est√° carregado!');
        alert('Erro ao carregar servi√ßos. Recarregue a p√°gina.');
        return;
    }
    
    console.log('‚úÖ Firebase carregado com sucesso!');
    
    const container = document.querySelector('.container');
    const loginBtn = document.querySelector('.login-btn');
    const registerBtn = document.querySelector('.register-btn');

    // Seleciona os formul√°rios
    const registerForm = document.querySelector('.form-box.register form');
    const loginForm = document.querySelector('.form-box.login form');

    if (!container || !loginBtn || !registerBtn || !registerForm || !loginForm) {
        console.error('‚ùå Elementos do formul√°rio n√£o encontrados!');
        return;
    }

    // Altern√¢ncia entre formul√°rios
    registerBtn.addEventListener('click', () => {
        container.classList.add('active');
    });

    loginBtn.addEventListener('click', () => {
        container.classList.remove('active');
    });

// ============================================
// FUN√á√ÉO: ENVIAR EMAIL DE BOAS-VINDAS COM FORMSPREE
// ============================================
function enviarEmailBoasVindas(username, password, email) {
    console.log('üìß Preparando envio de email via Formspree...');
    console.log('üìä Dados:', { username, email });
    
    // Dados do email
    const emailData = {
        email: email,
        message: `Ol√° ${username}!\n\nSeu cadastro no Sistema Florense foi realizado com sucesso!\n\nüë§ Nome: ${username}\nüìß Email: ${email}\nüîë Senha: ${password}\n\nGuarde essas informa√ß√µes em um local seguro.\n\nBem-vindo(a) ao Sistema Florense!\n\nAcesse: https://victornascimento06.github.io/Florense/`
    };

    console.log('üì§ Enviando email via Formspree...');

    // Enviar via Formspree
    fetch('https://formspree.io/f/mblzbyrc', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(emailData)
    })
    .then(response => {
        if (response.ok) {
            console.log('‚úÖ Email enviado com sucesso via Formspree!');
            alert('‚úÖ Cadastro realizado com sucesso!\n\nüìß Verifique seu e-mail para as credenciais de acesso.');
            window.location.href = "trello-home.html";
        } else {
            throw new Error('Erro ao enviar email');
        }
    })
    .catch(error => {
        console.error('‚ùå ERRO ao enviar email via Formspree:', error);
        
        // FALLBACK: Mostrar credenciais na tela
        alert(`‚úÖ Cadastro realizado com sucesso!\n\n‚ö†Ô∏è O email n√£o p√¥de ser enviado.\n\nüë§ Nome: ${username}\nüìß Email: ${email}\nüîë Senha: ${password}\n\n‚ö†Ô∏è ANOTE SUAS CREDENCIAIS!\n\nVoc√™ ser√° redirecionado...`);
        window.location.href = "trello-home.html";
    });
}

// ============================================
// CADASTRO DE USU√ÅRIO (FIREBASE)
// ============================================
registerForm.addEventListener('submit', async function(e) {
    e.preventDefault();

    const inputs = registerForm.querySelectorAll('input');
    const fullName = inputs[0].value.trim(); // Nome e Sobrenome
    const email = inputs[1].value.trim();
    const emailRepeat = inputs[2].value.trim();
    const password = inputs[3].value;
    const passwordRepeat = inputs[4].value;

    // Valida√ß√µes
    if (email !== emailRepeat) {
        alert('Os e-mails n√£o coincidem!');
        return;
    }
    if (password !== passwordRepeat) {
        alert('As senhas n√£o coincidem!');
        return;
    }
    if (password.length < 6) {
        alert('A senha deve ter pelo menos 6 caracteres!');
        return;
    }

    // Mostrar loading
    const submitBtn = registerForm.querySelector('.btn');
    const originalText = submitBtn.textContent;
    submitBtn.textContent = 'Cadastrando...';
    submitBtn.disabled = true;

    try {
        console.log('üìù Tentando cadastrar:', { fullName, email });
        
        // Registrar usu√°rio no Firebase SOMENTE
        const result = await firebaseService.registerUser(fullName, email, password);

        console.log('üìä Resultado do cadastro:', result);

        if (result.success) {
            console.log('‚úÖ Usu√°rio cadastrado no Firebase:', result.user);
            
            // SALVAR DADOS DO USU√ÅRIO NO LOCALSTORAGE
            const userData = {
                email: result.user.email,
                fullName: fullName,
                username: fullName,
                photo: null,
                uid: result.user.uid,
                loginTime: new Date().toISOString()
            };
            
            localStorage.setItem('loggedUser', JSON.stringify(userData));
            console.log('‚úÖ Dados salvos no localStorage:', userData);
            
            // Enviar email de boas-vindas
            console.log('üìß Enviando email de boas-vindas...');
            enviarEmailBoasVindas(fullName, password, email);
            
            // Nota: o redirecionamento acontece dentro da fun√ß√£o enviarEmailBoasVindas
            // ap√≥s o email ser enviado com sucesso
        } else {
            // Tratar erros espec√≠ficos
            let errorMessage = 'Erro ao cadastrar usu√°rio.';
            
            console.error('‚ùå Erro retornado:', result.error);
            
            if (result.error && result.error.code) {
                if (result.error.code === 'auth/email-already-in-use') {
                    errorMessage = 'Este e-mail j√° est√° cadastrado!';
                } else if (result.error.code === 'auth/invalid-email') {
                    errorMessage = 'E-mail inv√°lido!';
                } else if (result.error.code === 'auth/weak-password') {
                    errorMessage = 'Senha muito fraca!';
                } else {
                    errorMessage = `Erro: ${result.error.code}\n${result.error.message}`;
                }
            } else {
                errorMessage = `Erro desconhecido:\n${JSON.stringify(result.error)}`;
            }
            
            alert(errorMessage);
            console.error('Mensagem de erro:', errorMessage);
            submitBtn.textContent = originalText;
            submitBtn.disabled = false;
        }
    } catch (error) {
        console.error('‚ùå Erro no cadastro (CATCH):', error);
        console.error('Tipo do erro:', typeof error);
        console.error('Erro completo:', JSON.stringify(error, null, 2));
        
        let errorMessage = 'Erro ao cadastrar usu√°rio.\n\n';
        errorMessage += 'Detalhes t√©cnicos:\n';
        errorMessage += `Tipo: ${error.name || 'Desconhecido'}\n`;
        errorMessage += `Mensagem: ${error.message || 'Sem mensagem'}\n`;
        errorMessage += `C√≥digo: ${error.code || 'Sem c√≥digo'}`;
        
        alert(errorMessage);
        submitBtn.textContent = originalText;
        submitBtn.disabled = false;
    }
});

// ============================================
// LOGIN DE USU√ÅRIO (FIREBASE)
// ============================================
loginForm.addEventListener('submit', async function(e) {
    e.preventDefault();
    e.stopPropagation();

    console.log('üîê Formul√°rio de login submetido');

    const inputs = loginForm.querySelectorAll('input');
    const usernameOrEmail = inputs[0].value.trim();
    const password = inputs[1].value;

    if (!usernameOrEmail || !password) {
        alert('Preencha usu√°rio e senha!');
        return false;
    }

    // Mostrar loading
    const submitBtn = loginForm.querySelector('.btn');
    const originalText = submitBtn.textContent;
    submitBtn.textContent = 'Entrando...';
    submitBtn.disabled = true;

    try {
        console.log('üîê Tentando fazer login com Firebase:', usernameOrEmail);
        
        // Login SOMENTE via Firebase
        const result = await firebaseService.loginUser(usernameOrEmail, password);

        console.log('üìä Resultado do login:', result);

        if (result.success) {
            console.log('‚úÖ Login Firebase realizado com sucesso!');
            
            // SALVAR DADOS DO USU√ÅRIO NO LOCALSTORAGE
            const userData = {
                email: result.user.email,
                fullName: result.user.displayName || result.user.email.split('@')[0],
                username: result.user.displayName || result.user.email.split('@')[0],
                photo: result.user.photoURL || null,
                uid: result.user.uid,
                loginTime: new Date().toISOString()
            };
            
            localStorage.setItem('loggedUser', JSON.stringify(userData));
            console.log('‚úÖ Dados salvos no localStorage:', userData);
            
            submitBtn.textContent = originalText;
            submitBtn.disabled = false;
            
            console.log('üîÑ Redirecionando para trello-home...');
            window.location.href = "trello-home.html";
            return;
        } else {
            console.error('‚ùå Erro no login Firebase:', result.error);
            
            let errorMessage = 'Email ou senha incorretos!';
            if (result.error && result.error.code === 'auth/user-not-found') {
                errorMessage = 'Usu√°rio n√£o encontrado. Cadastre-se primeiro!';
            } else if (result.error && result.error.code === 'auth/wrong-password') {
                errorMessage = 'Senha incorreta!';
            }
            
            alert(errorMessage);
            submitBtn.textContent = originalText;
            submitBtn.disabled = false;
        }
        
    } catch (error) {
        console.error('‚ùå Erro no login (CATCH):', error);
        alert('Erro ao fazer login. Tente novamente.');
        submitBtn.textContent = originalText;
        submitBtn.disabled = false;
    }
});

// ============================================
// VERIFICAR SE J√Å EST√Å LOGADO
// ============================================
    // Verificar autentica√ß√£o do Firebase (SEM redirecionamento autom√°tico)
    auth.onAuthStateChanged((user) => {
        if (user) {
            console.log('üë§ Usu√°rio detectado:', user.displayName || user.email);
            // N√ÉO redirecionar automaticamente para evitar loops
        } else {
            console.log('üë§ Nenhum usu√°rio logado');
        }
    });
    
    console.log('‚úÖ Script de autentica√ß√£o carregado!');
}); // Fecha o DOMContentLoaded
